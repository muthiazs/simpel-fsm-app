// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ENUM untuk Role
enum role {
  admin
  pemohon
}

// Model user
model user {
  id        Int     @id @default(autoincrement())
  username  String
  email     String  @unique
  password  String
  role      role
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt

  // Relasi ke pemohon dan admin
  pemohon pemohon?
  admin   admin?
}

// Model pemohon
model pemohon {
  id_pemohon  Int     @id @default(autoincrement())
  nipnim      String?
  id_user     Int     @unique
  user        user    @relation(fields: [id_user], references: [id] , onDelete: Cascade)
  nama        String?
  nik         String?
  jabatan     String?
  pangkatgol  String?
  nopaspor    String?
  nohp        String?
  prodi       String?
  filektp     String?
  filekarpeg  String?
  createdat   DateTime @default(now())
  updatedat   DateTime @updatedAt

  // Relasi ke permohonan
  permohonan permohonan[]
}

enum PermohonanStatus {
  belumdisetujui
  disetujui
  ditolak
  dalamproses
  selesai
}

model permohonan {
  id_permohonan  Int      @id @default(autoincrement())
  id_pemohon     Int 
  pemohon        pemohon  @relation(fields: [id_pemohon], references: [id_pemohon])
  negaratujuan   String
  instansitujuan String
  keperluan      String
  tglmulai       DateTime
  tglselesai     DateTime
  biaya          String
  rencana        String
  undangan       String
  agenda         String
  tor            String
  surat          String? 
  status         PermohonanStatus @default(belumdisetujui) // âœ… Menggunakan enum
  createdat      DateTime @default(now())
  updatedat      DateTime @updatedAt
}



// Model admin
model admin {
  nip      String @id
  id_admin Int    @unique
  user     user   @relation(fields: [id_admin], references: [id])
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
}
