// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ENUM untuk Role
enum Role {
  ADMIN
  PEMOHON
}

// Model Users
model User {
  id       Int    @id @default(autoincrement())
  username String
  email    String @unique
  password String
  role     Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi ke Pemohon dan Admin
  pemohon Pemohon?
  admin   Admin?
}

// Model Pemohon
model Pemohon {
  id_pemohon Int    @id @default(autoincrement())
  nipnim     String @unique
  id_user    Int    @unique
  user       User   @relation(fields: [id_user], references: [id])
  nama       String
  nik        String
  jabatan    String
  pangkatgol String
  NoPaspor   String?
  NoHP       String
  fileKTP    String
  fileKarpeg String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relasi ke Permohonan
  permohonan Permohonan[]
}

// Model Permohonan
model Permohonan {
  id_permohonan Int      @id @default(autoincrement())
  id_pemohon    Int
  pemohon       Pemohon  @relation(fields: [id_pemohon], references: [id_pemohon])
  negaratujuan  String
  instansitujuan String
  keperluan     String
  tglMulai      DateTime
  tglSelesai    DateTime
  biaya         String
  rencana       String
  undangan      String
  agenda        String
  tor           String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Model Admin
model Admin {
  nip      String @id
  id_admin Int    @unique
  user     User   @relation(fields: [id_admin], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}